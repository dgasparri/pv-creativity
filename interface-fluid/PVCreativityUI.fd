# data file for the Fltk User Interface Designer (fluid)
version 1.0305
header_name {.h}
code_name {.cpp}
class PVCreativityUI {open
} {
  Function {PVCreativityUI()} {open
  } {
    Fl_Window window {
      label {Photovoltaic Creativity} open
      protected xywh {1610 244 917 1169} type Double
      code0 {\#include <Windows.h>}
      code1 {\#include <iostream>} visible
    } {
      Fl_Group {} {
        label {Input Values} open
        xywh {640 40 230 585} box THIN_UP_BOX
      } {
        Fl_Value_Input L {
          label Latitude
          xywh {760 60 95 23} maximum 360 value 35
        }
        Fl_Value_Input beta {
          label {Beta (Tilt)}
          xywh {760 90 95 23} maximum 90 value 30
        }
        Fl_Value_Input L_T {
          label {Glass Thickness}
          xywh {760 150 95 23} value 0.002
        }
        Fl_Value_Input G_B {
          label G_B
          xywh {760 300 95 23} maximum 2000 value 715
        }
        Fl_Button compute {
          label Compute
          callback {int N = (int)this->N->value();
	int minutes = (int)this->minutes->value();
	double L = (double)this->L->value();
	double beta = (double)this->beta->value();
	double Z_S = (double)this->Z_S->value();
	double n_refraction_index = (double)this->n->value();
	double L_T = (double)this->L_T->value();
	double K = (double)this->K->value();
	double G_B = (double)this->G_B->value();



	double S = compute_absorbed_radiation_S(
		N,
		minutes,
		L,
		beta,
		Z_S,
		n_refraction_index,
		L_T,
		K,
		G_B,
		1);

	std::cout << "Da pressione di bottone" << std::endl
		<< "L: " << L << std::endl
		<< "beta: " << beta << std::endl
		<< "Z_S: " << Z_S << std::endl
		<< "L_T: " << L_T << std::endl
		<< "Refraction Index (n): " << n_refraction_index << std::endl
		<< "K: " << K << std::endl
		<< "Giorni (N): " << N << std::endl
		<< "Minuti (minutes): " << minutes << std::endl
		<< "G_B: " << G_B << std::endl
		<< "S: " << S << std::endl;} selected
          protected xywh {660 590 195 20}
          code0 {\#include "pv_output.h"}
        }
        Fl_Value_Input N {
          label Day
          xywh {760 240 95 23} minimum 1 maximum 365 value 1
        }
        Fl_Value_Input minutes {
          label Minutes
          xywh {760 270 95 23} minimum -720 maximum 720
        }
        Fl_Value_Input Z_S {
          label Z_S
          xywh {760 120 95 23} maximum 360
        }
        Fl_Value_Input n {
          label {Refraction index}
          xywh {760 180 95 23} maximum 10 value 1.526
        }
        Fl_Value_Input K {
          label K
          xywh {760 210 95 23} maximum 100 value 4
        }
      }
      Fl_Box panel {
        label pframe
        xywh {25 25 600 600} box EMBOSSED_BOX
        code0 {\#include "PanelView.h"}
        class PanelView
      }
      Fl_Text_Display results {
        label Results
        xywh {25 645 600 400}
      }
    }
  }
  Function {show(int argc, char **argv)} {open
  } {
    code {this->window->show(argc,argv);} {}
  }
}
